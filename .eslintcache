[{"D:\\programming\\44ndStart\\src\\index.tsx":"1","D:\\programming\\44ndStart\\src\\Task.tsx":"2","D:\\programming\\44ndStart\\src\\EditableSpan.tsx":"3","D:\\programming\\44ndStart\\src\\App.tsx":"4","D:\\programming\\44ndStart\\src\\stories\\todolists-api.stories.tsx":"5","D:\\programming\\44ndStart\\src\\api\\todolist-api.ts":"6"},{"size":641,"mtime":1611420546000,"results":"7","hashOfConfig":"8"},{"size":1603,"mtime":1594154664000,"results":"9","hashOfConfig":"8"},{"size":952,"mtime":1594154724000,"results":"10","hashOfConfig":"8"},{"size":4778,"mtime":1636048556427,"results":"11","hashOfConfig":"8"},{"size":1727,"mtime":1636485810709,"results":"12","hashOfConfig":"8"},{"size":958,"mtime":1636485833850,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1hgl0h6",{"filePath":"16","messages":"17","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"23","messages":"24","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"25","messages":"26","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\programming\\44ndStart\\src\\index.tsx",[],"D:\\programming\\44ndStart\\src\\Task.tsx",["27","28","29"],"import React, {ChangeEvent, useCallback} from 'react'\r\nimport {Checkbox, IconButton} from '@material-ui/core'\r\nimport {EditableSpan} from './EditableSpan'\r\nimport {Delete} from '@material-ui/icons'\r\nimport {TaskType} from './Todolist'\r\n\r\ntype TaskPropsType = {\r\n    task: TaskType\r\n    todolistId: string\r\n    changeTaskStatus: (id: string, isDone: boolean, todolistId: string) => void\r\n    changeTaskTitle: (taskId: string, newTitle: string, todolistId: string) => void\r\n    removeTask: (taskId: string, todolistId: string) => void\r\n}\r\nexport const Task = React.memo((props: TaskPropsType) => {\r\n    const onClickHandler = useCallback(() => props.removeTask(props.task.id, props.todolistId), [props.task.id, props.todolistId]);\r\n\r\n    const onChangeHandler = useCallback((e: ChangeEvent<HTMLInputElement>) => {\r\n        let newIsDoneValue = e.currentTarget.checked\r\n        props.changeTaskStatus(props.task.id, newIsDoneValue, props.todolistId)\r\n    }, [props.task.id, props.todolistId]);\r\n\r\n    const onTitleChangeHandler = useCallback((newValue: string) => {\r\n        props.changeTaskTitle(props.task.id, newValue, props.todolistId)\r\n    }, [props.task.id, props.todolistId]);\r\n\r\n    return <div key={props.task.id} className={props.task.isDone ? 'is-done' : ''}>\r\n        <Checkbox\r\n            checked={props.task.isDone}\r\n            color=\"primary\"\r\n            onChange={onChangeHandler}\r\n        />\r\n\r\n        <EditableSpan value={props.task.title} onChange={onTitleChangeHandler}/>\r\n        <IconButton onClick={onClickHandler}>\r\n            <Delete/>\r\n        </IconButton>\r\n    </div>\r\n})\r\n","D:\\programming\\44ndStart\\src\\EditableSpan.tsx",[],"D:\\programming\\44ndStart\\src\\App.tsx",["30","31","32","33","34","35","36","37","38","39","40","41","42"],"D:\\programming\\44ndStart\\src\\stories\\todolists-api.stories.tsx",["43","44"],"D:\\programming\\44ndStart\\src\\api\\todolist-api.ts",["45","46"],{"ruleId":"47","severity":1,"message":"48","line":15,"column":97,"nodeType":"49","endLine":15,"endColumn":130,"suggestions":"50"},{"ruleId":"47","severity":1,"message":"48","line":20,"column":8,"nodeType":"49","endLine":20,"endColumn":41,"suggestions":"51"},{"ruleId":"47","severity":1,"message":"48","line":24,"column":8,"nodeType":"49","endLine":24,"endColumn":41,"suggestions":"52"},{"ruleId":"53","severity":1,"message":"54","line":1,"column":29,"nodeType":"55","messageId":"56","endLine":1,"endColumn":39},{"ruleId":"53","severity":1,"message":"57","line":1,"column":41,"nodeType":"55","messageId":"56","endLine":1,"endColumn":49},{"ruleId":"53","severity":1,"message":"58","line":13,"column":5,"nodeType":"55","messageId":"56","endLine":13,"endColumn":21},{"ruleId":"53","severity":1,"message":"59","line":15,"column":73,"nodeType":"55","messageId":"56","endLine":15,"endColumn":85},{"ruleId":"53","severity":1,"message":"60","line":32,"column":9,"nodeType":"55","messageId":"56","endLine":32,"endColumn":20},{"ruleId":"53","severity":1,"message":"61","line":33,"column":9,"nodeType":"55","messageId":"56","endLine":33,"endColumn":20},{"ruleId":"47","severity":1,"message":"62","line":42,"column":8,"nodeType":"49","endLine":42,"endColumn":10,"suggestions":"63"},{"ruleId":"47","severity":1,"message":"62","line":47,"column":8,"nodeType":"49","endLine":47,"endColumn":10,"suggestions":"64"},{"ruleId":"47","severity":1,"message":"62","line":52,"column":8,"nodeType":"49","endLine":52,"endColumn":10,"suggestions":"65"},{"ruleId":"47","severity":1,"message":"62","line":57,"column":8,"nodeType":"49","endLine":57,"endColumn":10,"suggestions":"66"},{"ruleId":"47","severity":1,"message":"62","line":62,"column":8,"nodeType":"49","endLine":62,"endColumn":10,"suggestions":"67"},{"ruleId":"47","severity":1,"message":"62","line":67,"column":8,"nodeType":"49","endLine":67,"endColumn":10,"suggestions":"68"},{"ruleId":"47","severity":1,"message":"62","line":72,"column":8,"nodeType":"49","endLine":72,"endColumn":10,"suggestions":"69"},{"ruleId":"70","severity":1,"message":"71","line":4,"column":1,"nodeType":"72","endLine":6,"endColumn":2},{"ruleId":"53","severity":1,"message":"73","line":8,"column":7,"nodeType":"55","messageId":"56","endLine":8,"endColumn":15},{"ruleId":"53","severity":1,"message":"74","line":11,"column":6,"nodeType":"55","messageId":"56","endLine":11,"endColumn":24},{"ruleId":"53","severity":1,"message":"75","line":18,"column":6,"nodeType":"55","messageId":"56","endLine":18,"endColumn":17},"react-hooks/exhaustive-deps","React Hook useCallback has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useCallback call and refer to those specific props inside useCallback.","ArrayExpression",["76"],["77"],["78"],"@typescript-eslint/no-unused-vars","'useReducer' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'todolistsReducer' is defined but never used.","'tasksReducer' is defined but never used.","'todolistId1' is assigned a value but never used.","'todolistId2' is assigned a value but never used.","React Hook useCallback has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["79"],["80"],["81"],["82"],["83"],["84"],["85"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'settings' is assigned a value but never used.","'CommonResponseType' is defined but never used.","'TodoResType' is defined but never used.",{"desc":"86","fix":"87"},{"desc":"86","fix":"88"},{"desc":"86","fix":"89"},{"desc":"90","fix":"91"},{"desc":"90","fix":"92"},{"desc":"90","fix":"93"},{"desc":"90","fix":"94"},{"desc":"90","fix":"95"},{"desc":"90","fix":"96"},{"desc":"90","fix":"97"},"Update the dependencies array to be: [props]",{"range":"98","text":"99"},{"range":"100","text":"99"},{"range":"101","text":"99"},"Update the dependencies array to be: [dispatch]",{"range":"102","text":"103"},{"range":"104","text":"103"},{"range":"105","text":"103"},{"range":"106","text":"103"},{"range":"107","text":"103"},{"range":"108","text":"103"},{"range":"109","text":"103"},[693,726],"[props]",[955,988],[1145,1178],[1457,1459],"[dispatch]",[1633,1635],[1842,1844],[2056,2058],[2260,2262],[2412,2414],[2596,2598]]