[{"D:\\programming\\44ndStart\\src\\index.tsx":"1","D:\\programming\\44ndStart\\src\\Task.tsx":"2","D:\\programming\\44ndStart\\src\\EditableSpan.tsx":"3","D:\\programming\\44ndStart\\src\\App.tsx":"4","D:\\programming\\44ndStart\\src\\stories\\todolists-api.stories.tsx":"5"},{"size":641,"mtime":1611420546000,"results":"6","hashOfConfig":"7"},{"size":1603,"mtime":1594154664000,"results":"8","hashOfConfig":"7"},{"size":952,"mtime":1594154724000,"results":"9","hashOfConfig":"7"},{"size":4778,"mtime":1636048556427,"results":"10","hashOfConfig":"7"},{"size":1893,"mtime":1636482735804,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1hgl0h6",{"filePath":"14","messages":"15","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"16"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"19","messages":"20","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"21","messages":"22","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\programming\\44ndStart\\src\\index.tsx",[],"D:\\programming\\44ndStart\\src\\Task.tsx",["23","24","25"],"import React, {ChangeEvent, useCallback} from 'react'\r\nimport {Checkbox, IconButton} from '@material-ui/core'\r\nimport {EditableSpan} from './EditableSpan'\r\nimport {Delete} from '@material-ui/icons'\r\nimport {TaskType} from './Todolist'\r\n\r\ntype TaskPropsType = {\r\n    task: TaskType\r\n    todolistId: string\r\n    changeTaskStatus: (id: string, isDone: boolean, todolistId: string) => void\r\n    changeTaskTitle: (taskId: string, newTitle: string, todolistId: string) => void\r\n    removeTask: (taskId: string, todolistId: string) => void\r\n}\r\nexport const Task = React.memo((props: TaskPropsType) => {\r\n    const onClickHandler = useCallback(() => props.removeTask(props.task.id, props.todolistId), [props.task.id, props.todolistId]);\r\n\r\n    const onChangeHandler = useCallback((e: ChangeEvent<HTMLInputElement>) => {\r\n        let newIsDoneValue = e.currentTarget.checked\r\n        props.changeTaskStatus(props.task.id, newIsDoneValue, props.todolistId)\r\n    }, [props.task.id, props.todolistId]);\r\n\r\n    const onTitleChangeHandler = useCallback((newValue: string) => {\r\n        props.changeTaskTitle(props.task.id, newValue, props.todolistId)\r\n    }, [props.task.id, props.todolistId]);\r\n\r\n    return <div key={props.task.id} className={props.task.isDone ? 'is-done' : ''}>\r\n        <Checkbox\r\n            checked={props.task.isDone}\r\n            color=\"primary\"\r\n            onChange={onChangeHandler}\r\n        />\r\n\r\n        <EditableSpan value={props.task.title} onChange={onTitleChangeHandler}/>\r\n        <IconButton onClick={onClickHandler}>\r\n            <Delete/>\r\n        </IconButton>\r\n    </div>\r\n})\r\n","D:\\programming\\44ndStart\\src\\EditableSpan.tsx",[],"D:\\programming\\44ndStart\\src\\App.tsx",["26","27","28","29","30","31","32","33","34","35","36","37","38"],"D:\\programming\\44ndStart\\src\\stories\\todolists-api.stories.tsx",["39","40"],{"ruleId":"41","severity":1,"message":"42","line":15,"column":97,"nodeType":"43","endLine":15,"endColumn":130,"suggestions":"44"},{"ruleId":"41","severity":1,"message":"42","line":20,"column":8,"nodeType":"43","endLine":20,"endColumn":41,"suggestions":"45"},{"ruleId":"41","severity":1,"message":"42","line":24,"column":8,"nodeType":"43","endLine":24,"endColumn":41,"suggestions":"46"},{"ruleId":"47","severity":1,"message":"48","line":1,"column":29,"nodeType":"49","messageId":"50","endLine":1,"endColumn":39},{"ruleId":"47","severity":1,"message":"51","line":1,"column":41,"nodeType":"49","messageId":"50","endLine":1,"endColumn":49},{"ruleId":"47","severity":1,"message":"52","line":13,"column":5,"nodeType":"49","messageId":"50","endLine":13,"endColumn":21},{"ruleId":"47","severity":1,"message":"53","line":15,"column":73,"nodeType":"49","messageId":"50","endLine":15,"endColumn":85},{"ruleId":"47","severity":1,"message":"54","line":32,"column":9,"nodeType":"49","messageId":"50","endLine":32,"endColumn":20},{"ruleId":"47","severity":1,"message":"55","line":33,"column":9,"nodeType":"49","messageId":"50","endLine":33,"endColumn":20},{"ruleId":"41","severity":1,"message":"56","line":42,"column":8,"nodeType":"43","endLine":42,"endColumn":10,"suggestions":"57"},{"ruleId":"41","severity":1,"message":"56","line":47,"column":8,"nodeType":"43","endLine":47,"endColumn":10,"suggestions":"58"},{"ruleId":"41","severity":1,"message":"56","line":52,"column":8,"nodeType":"43","endLine":52,"endColumn":10,"suggestions":"59"},{"ruleId":"41","severity":1,"message":"56","line":57,"column":8,"nodeType":"43","endLine":57,"endColumn":10,"suggestions":"60"},{"ruleId":"41","severity":1,"message":"56","line":62,"column":8,"nodeType":"43","endLine":62,"endColumn":10,"suggestions":"61"},{"ruleId":"41","severity":1,"message":"56","line":67,"column":8,"nodeType":"43","endLine":67,"endColumn":10,"suggestions":"62"},{"ruleId":"41","severity":1,"message":"56","line":72,"column":8,"nodeType":"43","endLine":72,"endColumn":10,"suggestions":"63"},{"ruleId":"64","severity":1,"message":"65","line":4,"column":1,"nodeType":"66","endLine":6,"endColumn":2},{"ruleId":"47","severity":1,"message":"67","line":66,"column":19,"nodeType":"49","messageId":"50","endLine":66,"endColumn":27},"react-hooks/exhaustive-deps","React Hook useCallback has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useCallback call and refer to those specific props inside useCallback.","ArrayExpression",["68"],["69"],["70"],"@typescript-eslint/no-unused-vars","'useReducer' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'todolistsReducer' is defined but never used.","'tasksReducer' is defined but never used.","'todolistId1' is assigned a value but never used.","'todolistId2' is assigned a value but never used.","React Hook useCallback has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["71"],["72"],["73"],["74"],["75"],["76"],["77"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'setState' is assigned a value but never used.",{"desc":"78","fix":"79"},{"desc":"78","fix":"80"},{"desc":"78","fix":"81"},{"desc":"82","fix":"83"},{"desc":"82","fix":"84"},{"desc":"82","fix":"85"},{"desc":"82","fix":"86"},{"desc":"82","fix":"87"},{"desc":"82","fix":"88"},{"desc":"82","fix":"89"},"Update the dependencies array to be: [props]",{"range":"90","text":"91"},{"range":"92","text":"91"},{"range":"93","text":"91"},"Update the dependencies array to be: [dispatch]",{"range":"94","text":"95"},{"range":"96","text":"95"},{"range":"97","text":"95"},{"range":"98","text":"95"},{"range":"99","text":"95"},{"range":"100","text":"95"},{"range":"101","text":"95"},[693,726],"[props]",[955,988],[1145,1178],[1457,1459],"[dispatch]",[1633,1635],[1842,1844],[2056,2058],[2260,2262],[2412,2414],[2596,2598]]